/**
 * Copyright 2010 CosmoCode GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.05.18 at 03:59:59 PM CEST 
//


package de.cosmocode.palava.ipc.xml.rpc.generated;

import java.math.BigDecimal;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import de.cosmocode.palava.ipc.xml.rpc.generated.runtime.ZeroOneBooleanAdapter;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the de.cosmocode.palava.ipc.xml.rpc.generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ValueTypeBase64_QNAME = new QName("", "base64");
    private final static QName _ValueTypeStruct_QNAME = new QName("", "struct");
    private final static QName _ValueTypeInt_QNAME = new QName("", "int");
    private final static QName _ValueTypeString_QNAME = new QName("", "string");
    private final static QName _ValueTypeBoolean_QNAME = new QName("", "boolean");
    private final static QName _ValueTypeDouble_QNAME = new QName("", "double");
    private final static QName _ValueTypeI4_QNAME = new QName("", "i4");
    private final static QName _ValueTypeDateTimeIso8601_QNAME = new QName("", "dateTime.iso8601");
    private final static QName _ValueTypeArray_QNAME = new QName("", "array");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: de.cosmocode.palava.ipc.xml.rpc.generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MethodResponse }
     * 
     */
    public MethodResponse createMethodResponse() {
        return new MethodResponse();
    }

    /**
     * Create an instance of {@link MethodCall.Params }
     * 
     */
    public MethodCall.Params createMethodCallParams() {
        return new MethodCall.Params();
    }

    /**
     * Create an instance of {@link MethodCall }
     * 
     */
    public MethodCall createMethodCall() {
        return new MethodCall();
    }

    /**
     * Create an instance of {@link MethodResponse.Params }
     * 
     */
    public MethodResponse.Params createMethodResponseParams() {
        return new MethodResponse.Params();
    }

    /**
     * Create an instance of {@link FaultCodeMemberType }
     * 
     */
    public FaultCodeMemberType createFaultCodeMemberType() {
        return new FaultCodeMemberType();
    }

    /**
     * Create an instance of {@link ValueType }
     * 
     */
    public ValueType createValueType() {
        return new ValueType();
    }

    /**
     * Create an instance of {@link MethodResponse.Fault }
     * 
     */
    public MethodResponse.Fault createMethodResponseFault() {
        return new MethodResponse.Fault();
    }

    /**
     * Create an instance of {@link MethodResponse.Fault.Value.Struct }
     * 
     */
    public MethodResponse.Fault.Value.Struct createMethodResponseFaultValueStruct() {
        return new MethodResponse.Fault.Value.Struct();
    }

    /**
     * Create an instance of {@link ArrayType }
     * 
     */
    public ArrayType createArrayType() {
        return new ArrayType();
    }

    /**
     * Create an instance of {@link ArrayType.Data }
     * 
     */
    public ArrayType.Data createArrayTypeData() {
        return new ArrayType.Data();
    }

    /**
     * Create an instance of {@link FaultStringMemberType }
     * 
     */
    public FaultStringMemberType createFaultStringMemberType() {
        return new FaultStringMemberType();
    }

    /**
     * Create an instance of {@link MethodResponse.Fault.Value }
     * 
     */
    public MethodResponse.Fault.Value createMethodResponseFaultValue() {
        return new MethodResponse.Fault.Value();
    }

    /**
     * Create an instance of {@link StructType }
     * 
     */
    public StructType createStructType() {
        return new StructType();
    }

    /**
     * Create an instance of {@link MemberType }
     * 
     */
    public MemberType createMemberType() {
        return new MemberType();
    }

    /**
     * Create an instance of {@link ParamType }
     * 
     */
    public ParamType createParamType() {
        return new ParamType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link byte[]}{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "base64", scope = ValueType.class)
    public JAXBElement<byte[]> createValueTypeBase64(byte[] value) {
        return new JAXBElement<byte[]>(_ValueTypeBase64_QNAME, byte[].class, ValueType.class, ((byte[]) value));
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "struct", scope = ValueType.class)
    public JAXBElement<StructType> createValueTypeStruct(StructType value) {
        return new JAXBElement<StructType>(_ValueTypeStruct_QNAME, StructType.class, ValueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "int", scope = ValueType.class)
    public JAXBElement<Integer> createValueTypeInt(Integer value) {
        return new JAXBElement<Integer>(_ValueTypeInt_QNAME, Integer.class, ValueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "string", scope = ValueType.class)
    public JAXBElement<String> createValueTypeString(String value) {
        return new JAXBElement<String>(_ValueTypeString_QNAME, String.class, ValueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "boolean", scope = ValueType.class)
    @XmlJavaTypeAdapter(ZeroOneBooleanAdapter.class)
    public JAXBElement<Boolean> createValueTypeBoolean(Boolean value) {
        return new JAXBElement<Boolean>(_ValueTypeBoolean_QNAME, Boolean.class, ValueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigDecimal }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "double", scope = ValueType.class)
    public JAXBElement<BigDecimal> createValueTypeDouble(BigDecimal value) {
        return new JAXBElement<BigDecimal>(_ValueTypeDouble_QNAME, BigDecimal.class, ValueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "i4", scope = ValueType.class)
    public JAXBElement<Integer> createValueTypeI4(Integer value) {
        return new JAXBElement<Integer>(_ValueTypeI4_QNAME, Integer.class, ValueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XMLGregorianCalendar }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "dateTime.iso8601", scope = ValueType.class)
    public JAXBElement<XMLGregorianCalendar> createValueTypeDateTimeIso8601(XMLGregorianCalendar value) {
        return new JAXBElement<XMLGregorianCalendar>(_ValueTypeDateTimeIso8601_QNAME, XMLGregorianCalendar.class, ValueType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ArrayType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "array", scope = ValueType.class)
    public JAXBElement<ArrayType> createValueTypeArray(ArrayType value) {
        return new JAXBElement<ArrayType>(_ValueTypeArray_QNAME, ArrayType.class, ValueType.class, value);
    }

}
